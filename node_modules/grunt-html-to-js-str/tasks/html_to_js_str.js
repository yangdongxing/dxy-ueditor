/*
 * grunt-html-to-js-str
 * https://github.com/psherman/grunt-html-to-js-str
 *
 * Copyright (c) 2014 Paul Sherman
 * Licensed under the MIT license.
 */

'use strict';

/*
return a list of template matches and html filenames in templates.
Template structure is {{filename.html}}, which would return
['{{filename.html}}', 'filename.html']
*/
function findFilenames(js){
	var templateRegex = /{{\s?([\w+\/]+\.html)\s?}}/gi,
	matches,
	filenames = [];
	while ( matches = templateRegex.exec(js)) {
		filenames.push(matches);
	}
	return filenames;
}

function htmlString(html){
	// escape quotation marks and replace whitespace characters (besides a single space)
	var escapedHTML = html.replace(/([\t\n\r\f\v]|\s{2,})/g, "").replace(/"/g, '\\"');
	return '"' + escapedHTML + '"';
}

module.exports = function(grunt) {
	grunt.registerMultiTask('html_to_js_str', 'Take an HTML file and insert it as a string into a Javascript file', function() {
		// Iterate over all specified file groups.
		this.files.forEach(function(f) {
			f.src.filter(function(filepath) {
				// Warn on and remove invalid source files (if nonull was set).
				if (!grunt.file.exists(filepath)) {
					grunt.log.warn('Source file "' + filepath + '" not found.');
					return false;
				} else {
					return true;
				}
			}).forEach(function(filepath) {
				// Read file source.
				var js = grunt.file.read(filepath);
				var count = 0;
				var names = findFilenames(js);

				names.forEach(function(file) {
					var template = file[0],
						name = file[1];
					if (!grunt.file.exists(name)) {
						grunt.log.warn('Template file "' + name + '" not found.');
						return;
					}
					var html = grunt.file.read(name),
						parsedHTML = htmlString(html);
					js = js.replace(template, parsedHTML);
					count++;
					
				});
				grunt.file.write(f.dest, js);
				grunt.log.writeln('File "' + f.dest + '" created.');
			});
		});
	});
};
